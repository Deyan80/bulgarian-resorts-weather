import streamlit as st
import requests
from datetime import datetime, timedelta
import pandas as pd

# –°–ø–∏—Å—ä–∫ —Å –ø–æ–ø—É–ª—è—Ä–Ω–∏ –±—ä–ª–≥–∞—Ä—Å–∫–∏ –∫—É—Ä–æ—Ä—Ç–∏ –∏ —Ç–µ—Ö–Ω–∏—Ç–µ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∏ (lat, lon)
resorts = {
    "Sunny Beach": (42.695153, 27.710421),
    "Golden Sands": (43.2843, 28.0383),
    "Sozopol": (42.4167, 27.7),
    "Albena": (43.3682, 28.0801),
    "Burgas": (42.510578, 27.461014),
    "Nessebar": (42.659149, 27.736143),
    "Varna": (43.2167, 27.9167),
    "Bansko": (41.8373, 23.4857),
    "Borovets": (42.2667, 23.6),
    "Pamporovo": (41.6551, 24.6968),
}

st.title("üåû‚õ∑Ô∏è –ë—ä–ª–≥–∞—Ä—Å–∫–∏ –ö—É—Ä–æ—Ä—Ç–∏: –í—Ä–µ–º–µ—Ç–æ –ü—Ä–µ–¥–∏ –ì–æ–¥–∏–Ω–∞")
st.markdown("–ò–∑–±–µ—Ä–∏ –∫—É—Ä–æ—Ä—Ç –∏ –≤–∏–∂ –∫–∞–∫–≤–æ –µ –±–∏–ª–æ –≤—Ä–µ–º–µ—Ç–æ –Ω–∞ **—Ç–æ–∑–∏ –¥–µ–Ω –ø—Ä–µ–¥–∏ –≥–æ–¥–∏–Ω–∞**. –ò–¥–µ–∞–ª–Ω–æ –∑–∞ –ø–ª–∞–Ω–∏—Ä–∞–Ω–µ –Ω–∞ –ø–æ—á–∏–≤–∫–∞! üáßüá¨üèñÔ∏èüèîÔ∏è")

# –ò–∑–±–æ—Ä –Ω–∞ –∫—É—Ä–æ—Ä—Ç
resort = st.selectbox("–ò–∑–±–µ—Ä–∏ –∫—É—Ä–æ—Ä—Ç:", list(resorts.keys()))

lat, lon = resorts[resort]

# –ò–∑—á–∏—Å–ª—è–≤–∞–Ω–µ –Ω–∞ –¥–∞—Ç–∞—Ç–∞ –ø—Ä–µ–¥–∏ –≥–æ–¥–∏–Ω–∞
today = datetime.now().date()
last_year = today - timedelta(days=365)
start_date = last_year.strftime("%Y-%m-%d")
end_date = last_year.strftime("%Y-%m-%d")  # –°–∞–º–æ –µ–¥–∏–Ω –¥–µ–Ω

# API URL –∑–∞ Open-Meteo (historical data)
url = f"https://archive-api.open-meteo.com/v1/archive?latitude={lat}&longitude={lon}&start_date={start_date}&end_date={end_date}&daily=temperature_2m_max,temperature_2m_min,precipitation_sum,wind_speed_10m_max&timezone=Europe/Sofia"

# –ò–∑–ø—Ä–∞—â–∞–Ω–µ –Ω–∞ –∑–∞—è–≤–∫–∞
if st.button("–ü–æ–∫–∞–∂–∏ –≤—Ä–µ–º–µ—Ç–æ"):
    with st.spinner("–ó–∞—Ä–µ–∂–¥–∞–º –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏—Ç–µ –¥–∞–Ω–Ω–∏..."):
        response = requests.get(url)
    
    if response.status_code == 200:
        data = response.json()
        daily = data['daily']
        
        # –°—ä–∑–¥–∞–≤–∞–Ω–µ –Ω–∞ DataFrame –∑–∞ —Ç–∞–±–ª–∏—Ü–∞
        df = pd.DataFrame({
            '–î–∞—Ç–∞': pd.to_datetime(daily['time']),
            '–ú–∞–∫—Å. –¢–µ–º–ø. (¬∞C)': daily['temperature_2m_max'],
            '–ú–∏–Ω. –¢–µ–º–ø. (¬∞C)': daily['temperature_2m_min'],
            '–í–∞–ª–µ–∂–∏ (mm)': daily['precipitation_sum'],
            '–ú–∞–∫—Å. –í—è—Ç—ä—Ä (km/h)': daily['wind_speed_10m_max'],
        })
        
        st.success(f"–í—Ä–µ–º–µ—Ç–æ –Ω–∞ {last_year} –≤ {resort}:")
        st.dataframe(df, use_container_width=True)
        
        # –¢—É—Ä–∏—Å—Ç–∏—á–µ—Å–∫–∏ —Å—ä–≤–µ—Ç
        max_temp = daily['temperature_2m_max'][0]
        precip = daily['precipitation_sum'][0]
        if max_temp > 25 and precip < 1:
            st.balloons()
            st.info("üï∂Ô∏è –ú–∏–Ω–∞–ª–∞—Ç–∞ –≥–æ–¥–∏–Ω–∞ –µ –±–∏–ª–æ –∏–¥–µ–∞–ª–Ω–æ –∑–∞ –ø–ª–∞–∂! –°–ª—ä–Ω—á–µ–≤–æ –∏ —Ç–æ–ø–ª–æ.")
        elif precip > 5:
            st.warning("‚òî –ë–∏–ª–æ –µ –¥—ä–∂–¥–æ–≤–Ω–æ ‚Äì –ø–æ-–¥–æ–±—Ä–µ –ø–ª–∞–Ω–∏—Ä–∞–π –≤—ä—Ç—Ä–µ—à–Ω–∏ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏.")
    else:
        st.error("–ì—Ä–µ—à–∫–∞ –ø—Ä–∏ –∑–∞—Ä–µ–∂–¥–∞–Ω–µ –Ω–∞ –¥–∞–Ω–Ω–∏—Ç–µ. –ü—Ä–æ–≤–µ—Ä–∏ –≤—Ä—ä–∑–∫–∞—Ç–∞ —Å–∏ —Å –∏–Ω—Ç–µ—Ä–Ω–µ—Ç.")